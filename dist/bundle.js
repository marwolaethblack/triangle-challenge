!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t,r){"use strict";e.exports=(e=>{const t=Number(e);if(isNaN(t))throw new Error("Input must be a number");return t})},function(e,t,r){"use strict";e.exports={EQUILATERAL:"EQUILATERAL",ISOSCELES:"ISOSCELES",SCALENE:"SCALENE"}},function(e,t,r){"use strict";const n=r(1);e.exports=class{constructor(){this.types={0:n.SCALENE,2:n.ISOSCELES,3:n.EQUILATERAL}}removeDupsFromArray(e){return Array.from(new Set(e))}numOfEqualSides(e){let t=e.length-this.removeDupsFromArray(e).length;return 0!=t?t+1:t}findType(e){if(this.types[e])return this.types[e];throw new Error("No such type with that many equal sides")}}},function(e,t,r){"use strict";let n=r(2);const o=r(0),u=document.querySelector(".result"),s=document.querySelectorAll("input[type=number]"),c=document.querySelector(".triangle-form");n=new n,c.onsubmit=(e=>{e.preventDefault();const t=[];s.forEach(e=>{t.push(o(e.value))});const r=n.numOfEqualSides(t),c=n.findType(r);u.textContent="The triangle is "+c})},function(e,t,r){e.exports=r(3)}]);