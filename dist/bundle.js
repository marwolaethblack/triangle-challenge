!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},r.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=5)}([function(t,e,r){"use strict";t.exports=(t=>{const e=Number(t);if(isNaN(e))throw new Error("Input must be a number");if(e<=0)throw new Error("Your value must be greater than 0 or you forgot to input a value");return e})},function(t,e,r){"use strict";t.exports=class{removeDupsFromArray(t){return Array.from(new Set(t))}numOfEqualSides(t){let e=t.length-this.removeDupsFromArray(t).length;return 0!=e?e+1:e}}},function(t,e,r){"use strict";t.exports={EQUILATERAL:"EQUILATERAL",ISOSCELES:"ISOSCELES",SCALENE:"SCALENE"}},function(t,e,r){"use strict";const n=r(2),o=r(1);t.exports=class extends o{constructor(){super(),this.types={0:n.SCALENE,2:n.ISOSCELES,3:n.EQUILATERAL}}findType(t){if(this.types[t])return this.types[t];throw new Error("No such type with that many equal sides")}}},function(t,e,r){"use strict";let n=r(3);const o=r(0),u=document.querySelector(".result"),s=document.querySelectorAll("input[type=number]"),c=document.querySelector(".triangle-form");n=new n,c.onsubmit=(t=>{t.preventDefault();const e=[];let r="";if(s.forEach(t=>{try{e.push(o(t.value))}catch(t){r=t.message}}),r.length>1)return void(u.textContent=r);const c=n.numOfEqualSides(e);try{const t=n.findType(c);u.textContent="The triangle is "+t}catch(t){u.textContent=t.message}})},function(t,e,r){t.exports=r(4)}]);